


좀더 유연한 프로그램을 설계하기 위해 변하는 것과 변하지 않는 것을 구분해보겠습니다.

변하는 것: 제품 종류, 사용자 ID, 시리얼 번호 포맷
변하지 않는 것: 암호화 알고리즘, 입력 형식(정수형 텍스트)

변하는 것은 사용자가 요청할 제품의 종류와 사용자 자신의 ID입니다. 시리얼 번호를 받았는데 허가된 사용자 외에 아무나 사용할 수 있다면 시리얼 번호로서의 가치가 없겠지요. 따라서 시리얼 번호에는 사용자 ID에 대한 정보가 들어가서 허가된 사용자인지 인증할 수 있어야 합니다. 제품의 종류에 따라 다른 포맷의 시리얼 번호가 생성될 것입니다. 변하지 않는 것에는 암호화 알고리즘이 있고, 사용자 ID와 시리얼 번호가 정수형 텍스트라는 것이 변하지 않는 것입니다.

변하지 않는 것은 고정된 코드가 동일하게 실행됩니다. 정수형 문자를 읽는 코드와 암호/복호화 코드는 일정하게 실행됩니다. 따라서 제품 디자인에서 크게 고려할 것이 없습니다. 변하는 것을 설계하기 위해서는 좀더 많은 생각이 필요합니다. 한가지씩 생각해보겠습니다.

우선 제품의 종류는 greentea와 blacktea로 가정한다고 전제를 하였습니다. 하지만 늘 그렇듯이 언제 봐뀔지 모르는 사항입니다. 따라서 제품의 종류를 지정하는 기능이 필요하고 제품을 구별하기 위한 정보가 필요합니다. 우리는 정수로된 제품 번호를 지정해서 제품을 구별하겠습니다.

사용자 ID는 사람마다 다른 정수 값을 지정하는 것으로 처리하겠습니다.

시리얼 번호 포맷도 제품 종류가 바뀌면 따라서 바뀔 수 있는 것입니다. 시리얼 번호 포맷은 제품마다 다르게 만들겠습니다. greentea는 3자리-4자리-3자리의 시리얼 번호를 가지고, blacktea는 4자리-5자리-4자리의 시리얼 번호를 갖도록 만들어보겠습니다. 

그럼 변하는 것들은 누가 어떻게 지정해주어야 할까요. 사용자의 제품 구매 시나리오를 생각해보면 사용자가 제품을 고르고 자기 ID를 입력합니다. 그러면 회사에서 시리얼 번호와 제품을 전송해주고 사용자는 제품을 실행하면서 시리얼 번호를 입력하게 됩니다. 사용자가 입력해야하는 것은 제품 번호와 사용자 ID입니다. 변하는 것들 중에서 2가지는 사용자의 입력을 받으면 알 수 있는 것인데 시리얼 번호 포맷은 어떻게 알아낼 수 있을까요? 또 누가 지정해야하는 것일까요?

보통 이런 경우에는 설정 파일을 만들게 됩니다. vi에서 사용하는 .vimrc나 emacs의 .emacs와 같이 프로그램의 동작을 지정하는 설정 파일을 만들어서 시리얼 생성 프로그램이 규격 파일을 읽고 규격에 맞게 시리얼 번호를 생성하도록 만듭니다. 즉 다음과 같이 3가지 단계로 시리얼번호가 생성됩니다.

사용자가 자신의 ID, 제품 번호 전송 -> 설정 파일 생성 -> 시리얼 번호 생성

.vimrc나 .emacs는 제품이 이미 빌드된 상태에서 프로그램의 동작을 설정하는 파일이므로 프로그램이 내부적으로 사용하는 스크립트언어로 작성되어있습니다. 우리는 프로그램을 빌드하는 단계에서 설정 파일이 필요한 것이므로 C언어로 설정 파일을 만들겠습니다.  스크립트를 만들어서 사용하는 것보다 스크립트를 번역할 필요가 없으므로 더 간단해집니다. 또 설정 파일을 작성하는 사람이 .vimrc는 일반 사용자이지만 우리의 경우는 개발자입니다. 따라서 개발 언어를 사용하는 것이 타당합니다.

사용자에게 ID와 제품 번호를 전달받는 것은 웹페이지 등을 이용해서 자동으로  가정하고 우리는 규격 파일의 생성부터 시작해보겠습니다. 다음은 규격 파일의 예입니다.

$$desc_greentea.c


예제설명

기본프레임워크개발
desc.c 작성
빌드-생성/인증/확인
사용법

